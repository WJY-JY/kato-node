{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"debug\"","webpack:///./core/error.ts","webpack:///./core/common/json.ts","webpack:///./core/common/middleware-utils.ts","webpack:///./core/middleware/stub.ts","webpack:///./core/middleware/validate.ts","webpack:///./core/middleware/auth.ts","webpack:///./core/middleware/parse.ts","webpack:///./core/middleware/parameter/query-string.ts","webpack:///./core/middleware/parameter/json-body.ts","webpack:///external \"body-parser\"","webpack:///./core/middleware/parameter/url-encoded.ts","webpack:///./core/middleware/parameter/multipart.ts","webpack:///./core/middleware/respond.ts","webpack:///./core/middleware/invoke.ts","webpack:///./core/middleware/cors.ts","webpack:///./core/kato.ts","webpack:///./core/context.ts","webpack:///external \"stream\"","webpack:///./core/module.ts","webpack:///./index.ts","webpack:///external \"url\"","webpack:///external \"qs\"","webpack:///external \"dayjs\"","webpack:///external \"multer\"","webpack:///external \"joi\"","webpack:///external \"http\"","webpack:///external \"cls-hooked\"","webpack:///./core/http/request.ts","webpack:///./core/http/response.ts","webpack:///external \"on-finished\"","webpack:///external \"destroy\"","webpack:///./core/middleware.ts","webpack:///external \"get-parameter-names\"","webpack:///./core/options.ts","webpack:///external \"merge-options\"","webpack:///external \"prettyjson\"","webpack:///./core/http/transformer.ts","webpack:///./express/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","module.exports = require(\"debug\");","//kato 错误基类\nexport class KatoError extends Error {\n  constructor(message: string = \"未知错误\", public code: number) {\n    super(message);\n    this.name = \"KatoError\"\n  }\n}\n\n//kato 通用错误,错误码为0,这类错误可以直接显示给人类查看\nexport class KatoCommonError extends KatoError {\n  constructor(message: string) {\n    if (typeof message !== 'string') {\n      console.error(`KatoCommonError用于通用错误的表示,请保证message参数的可阅读性`)\n    }\n    super(message, 0);\n    this.name = 'KatoCommonError';\n  }\n}\n\n//kato 逻辑错误,错误码>0,这类错误是需要客户端根据code来做不同处理的\nexport class KatoLogicError extends KatoError {\n  constructor(message: string, code: number) {\n    if (code <= 0) {\n      console.error(`KatoLogicError仅仅使用于特殊的错误处理逻辑,根据规范,请保证错误编码>0`)\n    }\n    super(message, code)\n  }\n}\n\n//kato 运行时错误,错误码为-1,这类错误属于框架错误,必须及时处理\nexport class KatoRuntimeError extends KatoError {\n  constructor(message: string = \"未知运行时错误\") {\n    super(message, -1);\n    this.name = 'KatoRuntimeError';\n  }\n}\n","import * as dayjs from 'dayjs';\n\nconst ISO8601Regex = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]?\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]?\\d:[0-5]\\d|Z))/\n\nexport function reviver(key, value) {\n  if (typeof value === 'string')\n    if (ISO8601Regex.exec(value))\n      return dayjs(value).toDate();\n  return value;\n}\n\nexport function replacer(key, value) {\n  if (typeof value === 'string')\n    if (ISO8601Regex.exec(value))\n      return dayjs(value).format(\"YYYY-MM-DDTHH:mm:ss.SSSZ\");\n  return value;\n}\n\nexport function jsonParse(text: string) {\n  return JSON.parse(text, reviver);\n}\n\nexport function jsonStringify(value: any) {\n  return JSON.stringify(value, replacer)\n}\n","import {NextHandleFunction} from \"connect\";\nimport {IncomingMessage, ServerResponse} from \"http\";\n\nexport function middlewareWrapper(nativeMiddleware: NextHandleFunction) {\n  return async function (req: IncomingMessage, res: ServerResponse) {\n    return new Promise((resolve, reject) => {\n      nativeMiddleware(req, res, function (err) {\n        if (err)\n          reject(err);\n        else\n          resolve();\n      })\n    })\n  }\n}\n","import Context from \"../context\";\nimport {Middleware} from \"../middleware\";\n\nconst debug = require('debug')('kato:middle:stub');\n\n//缓存\nlet stubCache;\n\n//清除stub缓存\nexport function cleanStubCache() {\n  stubCache = null\n}\n\n//存根信息中间件,用于相应客户端的存根信息\nexport default async function stub(ctx: Context, next: Middleware) {\n  if (ctx.req.url === \"/stub.json\") {\n    if (!stubCache) {\n      //构建缓存\n      const stub = {\n        modules: []\n      };\n      for (const [moduleName, module] of ctx.kato.modules) {\n        const moduleStub = {\n          name: moduleName,\n          methods: []\n        };\n        for (const [methodName, method] of module.methods) {\n          moduleStub.methods.push({\n            name: methodName,\n            parameters: method.parameters.map(it => ({name: it.name, type: it.type}))\n          })\n        }\n        stub.modules.push(moduleStub);\n      }\n      stubCache = JSON.stringify(stub);\n\n      debug('生成stub')\n    }\n\n    ctx.res.setHeader(\"Content-Type\", \"application/json\");\n    ctx.res.body = stubCache;\n    //跳过正常的返回转换\n    ctx.bypassing = true;\n  } else\n    await next()\n}\n","import Context from \"../context\";\nimport {Middleware} from \"../middleware\";\nimport * as joi from 'joi';\nimport {Schema, SchemaLike} from \"joi\";\nimport {KatoRuntimeError} from \"../error\";\n\nconst debug = require('debug')('kato:middle:validate');\n\n//参数验证中间件\nexport default async function paramValidate(ctx: Context, next: Middleware) {\n  //拿到所有的参数,并且挨个验证\n  const validate: Schema[] = ctx.method.method.__validate;\n  if (validate instanceof Array) {\n    ctx.method.parameters\n      .map((p, index) => ({\n        name: p.name,\n        value: ctx.parameters[p.name],\n        schema: validate[index]\n      }))\n      .filter(it => it.schema)\n      .forEach(it => {\n        const result = joi.validate(it.value, it.schema.label(it.name), {convert: false});\n        if (result.error) {\n          throw new KatoRuntimeError(`${ctx.module.name}.${ctx.method.name} => ${result.error.message}`)\n        }\n      })\n  }\n\n  await next();\n}\n\n//validate注解\nexport function validate(...schemas: SchemaLike[]) {\n  return function (target, key) {\n    if (key && typeof target[key] === 'function') {\n      target[key].__validate = schemas.map(it => {\n        if (it !== null && it !== undefined && !it['isJoi']) {\n          return joi.compile(it);\n        }\n\n        return it;\n      });\n    } else {\n      throw new Error('kato:validate只能作用于方法上')\n    }\n  }\n}\n\nexport const should = joi;\n","import Context from \"../context\";\nimport {Middleware} from \"../middleware\";\nimport {KatoRuntimeError} from \"../error\";\n\nconst debug = require('debug')('kato:middle:auth');\n\nconst authFuncsSymbol = Symbol('kato-auth-functions');\n\n//验证中间件,用于验证是否有调用权限\nexport default async function authenticate(ctx: Context, next: Middleware) {\n  const authFuncs = ctx.method.method[authFuncsSymbol];\n  if (authFuncs instanceof Array) {\n    //将验证函数变成为or组合\n    const combinedAuth = or(...authFuncs);\n    if (!(await combinedAuth(ctx)))\n      throw new KatoRuntimeError(`不具备调用${ctx.module.name}.${ctx.method.name}的权限`)\n  }\n\n  await next();\n}\n\n//定义验证函数\nexport type AuthFunction = (ctx: Context) => Promise<boolean> | boolean\n\n//auth注解\nexport function auth(...authFuncs: AuthFunction[]) {\n  return function (target, key) {\n    if (key && typeof target[key] === 'function') {\n      target[key][authFuncsSymbol] = authFuncs;\n    } else {\n      throw new Error('kato:auth只能作用于方法上')\n    }\n  }\n}\n\n//产生一个新的验证函数,新验证函数的返回值与原验证函数相反\nexport function not(authFunc: AuthFunction): AuthFunction {\n  return async function (ctx: Context) {\n    if (typeof authFunc === 'function')\n      return !(await authFunc(ctx));\n    else\n      return true;\n  }\n}\n\n//产生一个新的验证函数,将原验证函数返回值做or运算\nexport function or(...authFuncs: AuthFunction[]): AuthFunction {\n  return function (ctx: Context) {\n    if (authFuncs.length < 1)\n      return true;\n\n    return new Promise((resolve, reject) => {\n      //并行地执行验证函数,并拿到结果\n      const results = authFuncs.map(func => {\n        const result = func(ctx) as any || false;\n        //将返回值promise化\n        return result.then ? result : Promise.resolve(result);\n      });\n\n      //已经完成的promise计数\n      let completed = 0;\n      //轮番判断所有的结果\n      for (const result of results) {\n        result.then(r => {\n          completed++;\n          if (r)\n          //如果返回结果是true,因为这是or组合,所以也无需等待其他的返回结果,直接resolve大的Promise\n            resolve(true);\n          else if (completed === results.length)\n          //如果返回结果是false,且自己是最后一个了,直接返回false\n            resolve(false);\n        }).catch(err => {\n          completed++;\n          //如果有错误,无需等待其他,直接可以reject大的Promise\n          reject(err);\n        });\n      }\n    })\n  }\n}\n\n//产生一个新的验证函数,将原验证函数返回值做and运算\nexport function and(...authFuncs: AuthFunction[]): AuthFunction {\n  return function (ctx: Context) {\n    if (authFuncs.length < 1)\n      return true;\n\n    return new Promise((resolve, reject) => {\n      //并行地执行验证函数,并拿到结果\n      const results = authFuncs.map(func => {\n        const result = func(ctx) as any || false;\n        //将返回值promise化\n        return result.then ? result : Promise.resolve(result);\n      });\n\n      //已经完成的promise计数\n      let completed = 0;\n      //轮番判断所有的结果\n      for (const result of results) {\n        result.then(r => {\n          completed++;\n          //如果返回结果是false,因为这是and组合,所以也无需等待其他的返回结果,直接resolve大的Promise\n          if (!r)\n            resolve(false);\n          else if (completed === results.length)\n          //如果返回结果是true,且自己是最后一个了,直接返回true\n            resolve(true);\n        }).catch(err => {\n          completed++;\n          //如果有错误,无需等待其他,直接可以reject大的Promise\n          reject(err);\n        });\n      }\n    })\n  }\n}\n","import Context from \"../context\";\nimport {Middleware} from \"../middleware\";\nimport {KatoRuntimeError} from \"../error\";\n\nconst debug = require('debug')('kato:middle:parse');\nconst regex = /^\\/(?:([^\\/]+?))\\/(?:([^\\/]+?))\\.ac$/;\n\n//解析url中的模块名和方法名\nexport default async function parse(ctx: Context, next: Middleware) {\n  const path = ctx.req.url.split('?')[0];\n  const match = regex.exec(path);\n\n  //如果路由不匹配\n  if (!match) {\n    throw new KatoRuntimeError(\"请求url不符合规范\")\n  }\n\n  //查找对应的模块和方法\n  let moduleName = match[1];\n  let methodName = match[2];\n\n  let module = ctx.kato.modules.get(moduleName);\n  if (module) {\n    let method = module.methods.get(methodName);\n    if (method) {\n      ctx.module = module;\n      ctx.method = method;\n      debug(`模块: ${module.name} 方法: ${method.name}`);\n      await next()\n    } else {\n      throw new KatoRuntimeError(`模块${moduleName}中找不到对应的方法${methodName}`);\n    }\n  } else {\n    throw new KatoRuntimeError(`找不到对应的模块${moduleName}`);\n  }\n}\n","import Context from \"../../context\";\nimport {Middleware} from \"../../middleware\";\nimport * as url from \"url\";\nimport * as qs from 'qs';\nimport {jsonParse} from \"../../common/json\";\nimport {KatoRuntimeError} from \"../../error\";\n\n//解析来自query的参数\nexport default async function queryString(ctx: Context, next: Middleware) {\n  //解析query string\n  const query = qs.parse(url.parse(ctx.req.url).query);\n\n  //注入到parameters中\n  if (query)\n    Object.getOwnPropertyNames(query).forEach(name => {\n      if (ctx.method.parameters.findIndex(p => p.name === name) !== -1) {\n        try {\n          ctx.parameters[name] = jsonParse(query[name]);\n        } catch (e) {\n          //如果是loose模式,则当出现无法解析的情况的时候,把它转换为字符串再解析\n          if (ctx.kato.options.loose)\n            ctx.parameters[name] = jsonParse(JSON.stringify(query[name]));\n          else\n            throw new KatoRuntimeError(e.message);\n        }\n      }\n    });\n\n  await next();\n}\n","import Context from \"../../context\";\nimport {Middleware} from \"../../middleware\";\nimport {middlewareWrapper} from \"../../common/middleware-utils\";\nimport * as bodyParser from \"body-parser\";\nimport {IncomingMessage} from \"http\";\nimport {reviver} from \"../../common/json\";\n\n//增强的req,保证静态检查,规范写法\ninterface ExtendedReq extends IncomingMessage {\n  body?: any,\n}\n\n//解析post中application/json编码的参数\nexport default async function jsonBody(ctx: Context, next: Middleware) {\n  const req = ctx.req as ExtendedReq;\n  const res = ctx.res;\n\n  //解析json类型的数据\n  const jsonParser = middlewareWrapper(bodyParser.json({reviver}));\n  await jsonParser(req, res);\n  const body = req.body;\n\n  //注入到parameters中,application/json类型的post不需要做json的反序列化了\n  if (body)\n    Object.getOwnPropertyNames(body).forEach(name => {\n      if (ctx.method.parameters.findIndex(p => p.name === name) !== -1) {\n        ctx.parameters[name] = body[name];\n      }\n    });\n\n  //删掉中间产生的req.body\n  req.body = null;\n\n  await next();\n}\n","module.exports = require(\"body-parser\");","import Context from \"../../context\";\nimport {Middleware} from \"../../middleware\";\nimport {IncomingMessage} from \"http\";\nimport {middlewareWrapper} from \"../../common/middleware-utils\";\nimport * as bodyParser from \"body-parser\";\nimport {jsonParse} from \"../../common/json\";\nimport {KatoRuntimeError} from \"../../error\";\n\n//增强的req,保证静态检查,规范写法\ninterface ExtendedReq extends IncomingMessage {\n  body?: any,\n}\n\n//解析post中url-encoded编码的参数\nexport default async function urlEncoded(ctx: Context, next: Middleware) {\n  const req = ctx.req as ExtendedReq;\n  const res = ctx.res;\n\n  //解析json类型的数据\n  const jsonParser = middlewareWrapper(bodyParser.urlencoded({extended: false}));\n  await jsonParser(req, res);\n  const body = req.body;\n\n  //注入到parameters中\n  if (req.body)\n    Object.getOwnPropertyNames(body).forEach(name => {\n      if (ctx.method.parameters.findIndex(p => p.name === name) !== -1) {\n        try {\n          ctx.parameters[name] = jsonParse(req.body[name]);\n        } catch (e) {\n          //如果是loose模式,则当出现无法解析的情况的时候,把它转换为字符串再解析\n          if (ctx.kato.options.loose)\n            ctx.parameters[name] = jsonParse(JSON.stringify(body[name]));\n          else\n            throw new KatoRuntimeError(e.message);\n        }\n      }\n    });\n\n  //删掉中间产生的req.body\n  req.body = null;\n\n  await next();\n}\n","import Context from \"../../context\";\nimport {Middleware} from \"../../middleware\";\nimport {IncomingMessage} from \"http\";\nimport {middlewareWrapper} from \"../../common/middleware-utils\";\nimport * as multer from 'multer';\nimport {jsonParse} from \"../../common/json\";\nimport {KatoRuntimeError} from \"../../error\";\n\n//增强的req,保证静态检查,规范写法\ninterface ExtendedReq extends IncomingMessage {\n  body?: any,\n  files?: any[],\n}\n\n//解析post中multipart参数\nexport default async function multipart(ctx: Context, next: Middleware) {\n  const req = ctx.req as ExtendedReq;\n  const res = ctx.res;\n\n  //解析multipart数据\n  const multipartParser = middlewareWrapper(multer({\n    storage: ctx.kato.options.files.storage || multer.memoryStorage(),\n    limits: {\n      files: ctx.kato.options.files.maxCount,\n      fileSize: ctx.kato.options.files.maxSize\n    },\n  }).any());\n  await multipartParser(req, res);\n\n  //文件解析\n  req.files && req.files.forEach(file => {\n    if (ctx.method.parameters.findIndex(p => p.name === file.fieldname) !== -1) {\n      ctx.parameters[file.fieldname] = file;\n    }\n  });\n\n  //multipart模式下,文件以外的字段在req.body中,所以同样也需要解析\n  if (req.body)\n    Object.getOwnPropertyNames(req.body).forEach(name => {\n      if (ctx.method.parameters.findIndex(p => p.name === name) !== -1) {\n        try {\n          ctx.parameters[name] = jsonParse(req.body[name]);\n        } catch (e) {\n          //如果是loose模式,则当出现无法解析的情况的时候,把它转换为字符串再解析\n          if (ctx.kato.options.loose)\n            ctx.parameters[name] = jsonParse(JSON.stringify(req.body[name]));\n          else\n            throw new KatoRuntimeError(e.message);\n        }\n      }\n    });\n\n  //删掉中间产生的req.body和req.files\n  req.body = null;\n  req.files = null;\n\n  await next();\n}\n","import {Middleware} from \"../middleware\";\nimport Context from \"../context\";\nimport {jsonStringify} from \"../common/json\";\nimport {KatoError, KatoRuntimeError} from \"../error\";\n\nconst debug = require('debug')('kato:middle:respond');\n\nexport default async function respond(ctx: Context, next: Middleware) {\n  const res = ctx.res;\n\n  try {\n    //直接传递到下一个中间件\n    await next();\n\n    //如果跳过正常响应,或者res处于不可写的状态,则直接返回\n    if (ctx.bypassing || !res.writable)\n      return;\n\n    //处理正常的返回\n    res.setHeader(\"Content-Type\", \"application/json\");\n    res.body = jsonStringify(ctx.result);\n  } catch (e) {\n    //抓住中间件中的错误\n    let err = e;\n    if (!(e instanceof KatoError)) {\n      //如果不是一个KatoError,可以将它转化为KatoError\n      err = new KatoRuntimeError(e.message);\n      err.stack = e.stack || '';\n    }\n    //准备输出错误信息到http连接\n    res.setHeader(\"Content-Type\", \"application/json\");\n    res.body = jsonStringify({\n      _KatoErrorCode_: err.code,\n      _KatoErrorMessage_: err.message,\n      _KatoErrorStack_: ctx.kato.options.dev ? err.stack : ''\n    });\n    if (ctx.kato.options.outputRuntimeError) {\n      //输出到http的同时,针对运行时错误,还需要输出到控制台,以便记录\n      if (err instanceof KatoRuntimeError) {\n        console.error(err);\n      }\n    }\n  }\n}\n","import Context from \"../context\";\nimport {Middleware} from \"../middleware\";\n\n//调用中间件,用于调用真实的方法\nexport default async function invoke(ctx: Context, next: Middleware) {\n  //初始化参数\n  const args = ctx.method.parameters.map(p => ctx.parameters[p.name]);\n  //实例化module\n  const module = new ctx.module.module();\n  //代理context\n  const moduleProxy = new Proxy(module, {\n    get(target: any, key: PropertyKey): any {\n      return key === 'context' ? ctx : target[key];\n    }\n  });\n  //调用方法,同时也处理好异步\n  ctx.result = await ctx.method.method.apply(moduleProxy, args);\n\n  //继续下一个中间件,如果有需要的话\n  await next();\n}\n","import Context from \"../context\";\nimport {Middleware} from \"../middleware\";\nimport {KatoCorsOptions} from \"../options\";\n\nexport default async function cors(ctx: Context, next: Middleware) {\n  if (ctx.kato.options.cors) {\n    const options = ctx.kato.options.cors as KatoCorsOptions;\n\n    let headers;\n\n    if (options.headers instanceof Array) {\n      headers = options.headers.join(',');\n    } else {\n      //如果配置中没有指定headers,默认从请求中获取\n      headers = ctx.req.headers['access-control-request-headers'] || ['Content-Type', 'Content-Length'].join(',');\n    }\n\n    // 跨域配置\n    ctx.res.setHeader(\"Access-Control-Allow-Origin\", options.origin);\n    ctx.res.setHeader('Access-Control-Allow-Methods', options.methods.join(\",\"));\n    ctx.res.setHeader('Access-Control-Allow-Headers', headers);\n\n    // OPTIONS 请求快速返回\n    if (ctx.req.method === 'OPTIONS') {\n      ctx.res.statusCode = options.optionsStatusCode;\n      ctx.res.setHeader('Content-Length', 0);\n      //跳过正常的返回值转换\n      ctx.bypassing = true;\n\n      return;\n    }\n  }\n\n  await next()\n}\n","import * as http from \"http\";\nimport {createNamespace} from 'cls-hooked';\nimport Context from \"./context\";\nimport {MiddlewareContainer} from \"./middleware\";\nimport {ModuleContainer} from \"./module\";\nimport {getOptions, KatoOptions} from \"./options\";\nimport {IncomingMessage, ServerResponse} from \"http\";\nimport {transformer} from \"./http/transformer\";\n\nconst debug = require('debug')('kato:core');\n\n//CLS存储空间\nexport const katoCLS = createNamespace('kato');\n\nexport default class Kato {\n  //中间件容器\n  middlewares = new MiddlewareContainer();\n  //模块容器\n  modules = new ModuleContainer();\n  //配置\n  options: KatoOptions;\n  //原生服务器,node自带的,当不使用第三方框架的时候使用\n  server?: http.Server;\n\n  constructor(options: KatoOptions = {}) {\n    this.options = getOptions(options);\n  }\n\n  //添加中间件\n  use = this.middlewares.use.bind(this.middlewares);\n  //添加中间件\n  useAfter = this.middlewares.useAfter.bind(this.middlewares);\n\n  //加载api模块\n  load = this.modules.load.bind(this.modules);\n\n  //执行来自适配器过来的实例\n  async do(req: IncomingMessage, res: ServerResponse) {\n    return await katoCLS.runAndReturn(async () => {\n      //新建一个kato的context\n      const ctx = new Context(req, res);\n      ctx.kato = this;\n      //交给中间件去处理\n      await this.middlewares.do(ctx);\n      //中间件处理完毕,开始把res的结果输出到http\n      transformer(ctx.res)\n    });\n  }\n\n  //启动原生服务器\n  async listen(port: number, hostname: string = \"localhost\") {\n    return new Promise(((resolve, reject) => {\n      this.server = http.createServer(this.do.bind(this));\n      this.server.listen.call(this.server, port, hostname, err => {\n        err ? reject(err) : resolve();\n      });\n    }));\n  };\n\n  //关闭node原生服务器\n  async close() {\n    return new Promise(resolve => {\n      this.server.close.call(this.server, () => {\n        resolve();\n      });\n    })\n  };\n}\n","import {ModuleDescriptor, MethodDescriptor} from \"./module\";\nimport Kato, {katoCLS} from \"./kato\";\nimport {createRequest, KatoRequest} from \"./http/request\";\nimport {createResponse, KatoResponse} from \"./http/response\";\nimport {IncomingMessage, ServerResponse} from \"http\";\n\n//上下文在存储中的key\nconst contextSymbol = Symbol('kato-context');\n\nexport default class Context {\n  //获取当前的异步路径的上下文\n  public static get current(): Context {\n    return katoCLS.get(contextSymbol)\n  }\n\n  //kato实例\n  public kato: Kato;\n\n  //kato的请求和响应\n  public req: KatoRequest;\n  public res: KatoResponse;\n\n  //模块,方法以及调用的参数,这三个值在中间件解析的过程中逐渐填充\n  public module: ModuleDescriptor;\n  public method: MethodDescriptor;\n  public parameters: any = {};\n\n  //调用结果,invoke中间件填充\n  public result: any;\n\n  //是否由respond中间件来把result或者异常转换为KatoResponse的输出\n  public bypassing = false;\n\n  /**\n   * 初始化一个kato上下文\n   * @param req 原生的http请求\n   * @param res 原生的http响应\n   */\n  constructor(req: IncomingMessage, res: ServerResponse) {\n    this.req = createRequest(req);\n    this.res = createResponse(res);\n\n    //把当前上下文,注入到存储中去\n    katoCLS.set(contextSymbol, this);\n  }\n}\n","module.exports = require(\"stream\");","import * as getParameterNames from 'get-parameter-names'\nimport {cleanStubCache} from \"./middleware/stub\";\n\nconst debug = require('debug')('kato:core:module');\n\nconst aliasSymbol = Symbol('kato-alias');\n\nexport class ModuleDescriptor {\n  //模块名\n  name: string;\n\n  methods: Map<string, MethodDescriptor>;\n\n  constructor(public module) {\n    this.name = module[aliasSymbol] || module.name;\n    if (!this.name)\n      throw new Error(\"kato:模块类不能是匿名类\");\n\n    //开始填充函数\n    this.methods = new Map<string, MethodDescriptor>();\n\n    //获取类中的所有属性\n    let props = [];\n    let instance = new module();\n    let tempInstance = instance;\n    do {\n      //遍历获取所有的属性名\n      if (tempInstance.isPrototypeOf(Object))\n        continue;\n      props = props.concat(Object.getOwnPropertyNames(tempInstance));\n    } while (tempInstance = Object.getPrototypeOf(tempInstance));\n\n    //获取到所有的成员函数包括继承来的,并解析成为MethodDescriptor\n    props\n      .filter(it => typeof instance[it] === 'function') //必须是函数\n      .filter(it => ![\n        'constructor',\n        // '__defineGetter__',\n        // '__defineSetter__',\n        // '__lookupGetter__',\n        // '__lookupSetter__',\n        'isPrototypeOf',\n        'hasOwnProperty',\n        'propertyIsEnumerable',\n        // 'toString',\n        // 'valueOf',\n        // 'toLocaleString'\n      ].includes(it)) //过滤掉Object或者Function上的内置函数\n      .filter(it => !it.startsWith('_'))  //过滤掉_开头的函数\n      .filter((it, index, arr) => arr.indexOf(it) === index) //去重\n      .forEach(it => {\n        let method = new MethodDescriptor(instance[it], module);\n        this.methods.set(method.name, method);\n      })\n  }\n}\n\nexport class MethodDescriptor {\n  //方法名\n  name: string;\n  //参数\n  parameters: ParameterDescriptor[];\n\n  constructor(public method: Function | any, public parent: ModuleDescriptor) {\n    this.name = method[aliasSymbol] || method.name;\n    if (!this.name)\n      throw new Error(\"kato:不允许有匿名方法\");\n\n    //获取所有的参数\n    this.parameters = getParameterNames(method)\n      .map(name => new ParameterDescriptor(name, \"any\"));\n  }\n\n  toString() {\n    return `${this.name}(${this.parameters.join(', ')})`\n  }\n}\n\nexport class ParameterDescriptor {\n  //目前暂时支持5种类型\n  constructor(public name: string, public type: \"any\" | \"number\" | \"string\" | \"date\" | \"array\") {\n  }\n\n  toString() {\n    return `${this.name}: ${this.type}`\n  }\n}\n\n//模块容器\nexport class ModuleContainer extends Map<string, ModuleDescriptor> {\n  constructor() {\n    super()\n  }\n\n  load(moduleClass: any) {\n    if (typeof moduleClass !== 'function') {\n      debug(`企图加载一个${typeof moduleClass}被阻止`);\n      throw new Error('kato:只有类才能被加载')\n    }\n\n    //解析模块为模块描述,并添加到容器中\n    let module = new ModuleDescriptor(moduleClass);\n    this.set(module.name, module);\n\n    //清除stub缓存\n    cleanStubCache();\n\n    //输出模块概要信息\n    let methodNames = [];\n    for (let methodName of module.methods.keys()) {\n      methodNames.push(methodName)\n    }\n    debug(`模块${module.name}加载完成,函数${module.methods.size}个`);\n    for (let method of module.methods.values()) {\n      debug(`-> ${method}`)\n    }\n  }\n}\n\n//别名注解\nexport function alias(name) {\n  if (name) {\n    return function (object, key) {\n      let target = object;\n      if (key)\n        target = object[key];\n\n      if (typeof target !== 'function') {\n        throw new Error('kato:alias只能作用于类及其方法上')\n      }\n      target[aliasSymbol] = name;\n    }\n  } else\n    throw new Error(\"kato:名称不能为空\");\n}\n","//导出各种东东\n//中间件模块中的\nexport {default as ParseMiddleware} from './core/middleware/parse'\nexport {default as QueryStringMiddleware} from './core/middleware/parameter/query-string'\nexport {default as JsonBodyMiddleware} from './core/middleware/parameter/json-body'\nexport {default as UrlEncodedMiddleware} from './core/middleware/parameter/url-encoded'\nexport {default as MultipartMiddleware} from './core/middleware/parameter/multipart'\nexport {default as RespondMiddleware} from './core/middleware/respond'\nexport {default as StubMiddleware} from './core/middleware/stub'\nexport {default as InvokeMiddleware} from './core/middleware/invoke'\nexport {default as ValidateMiddleware} from './core/middleware/validate'\nexport {default as AuthenticateMiddleware} from './core/middleware/auth'\nexport {default as CorsMiddleware} from './core/middleware/cors'\n\n//validate\nexport {validate, should} from './core/middleware/validate'\n//auth\nexport {auth, and, or, not} from './core/middleware/auth'\n\n//core模块中的\nexport {default as Kato} from './core/kato'\nexport {default as Context} from './core/context'\nexport * from './core/error'\nexport {alias} from './core/module'\n\n//express适配器\nexport {adapter as ExpressAdapter} from './express'\n","module.exports = require(\"url\");","module.exports = require(\"qs\");","module.exports = require(\"dayjs\");","module.exports = require(\"multer\");","module.exports = require(\"joi\");","module.exports = require(\"http\");","module.exports = require(\"cls-hooked\");","import {IncomingMessage} from \"http\";\n\nexport interface KatoRequest extends IncomingMessage {\n}\n\nexport function createRequest(req: IncomingMessage) {\n  return Object.assign(req, {})\n}\n","import {ServerResponse} from \"http\";\nimport {Stream} from \"stream\";\nimport onFinished from \"on-finished\";\nimport destroy from \"destroy\";\n\nconst bodySymbol = Symbol('res-body');\n\nexport interface KatoResponse extends ServerResponse {\n  body: String | Buffer | Stream,\n  writable: boolean\n}\n\nexport function createResponse(res: ServerResponse): KatoResponse {\n  return Object.assign(res, {\n    set body(val: String | Buffer | Stream) {\n      this[bodySymbol] = val;\n\n      //如果是一个stream\n      if (val instanceof Stream) {\n        onFinished(res, destroy.bind(null, val))\n      }\n    },\n    get body() {\n      return this[bodySymbol]\n    },\n    get writable() {\n      if (this.finished) return false;\n\n      if (!this.socket) return true;\n      return this.socket.writable;\n    }\n  })\n}\n","module.exports = require(\"on-finished\");","module.exports = require(\"destroy\");","import Context from \"./context\";\nimport invoke from \"./middleware/invoke\";\nimport parse from \"./middleware/parse\";\nimport stub from \"./middleware/stub\";\nimport respond from \"./middleware/respond\";\nimport queryString from \"./middleware/parameter/query-string\";\nimport jsonBody from \"./middleware/parameter/json-body\";\nimport urlEncoded from \"./middleware/parameter/url-encoded\";\nimport multipart from \"./middleware/parameter/multipart\";\nimport paramValidate from \"./middleware/validate\";\nimport authenticate from \"./middleware/auth\";\nimport cors from \"./middleware/cors\";\n\nconst debug = require('debug')('kato:core:middle');\n\n//定义中间件的类型\nexport type Middleware = (ctx?: Context, next?: Middleware) => Promise<void>;\n\n//中间件容器\nexport class MiddlewareContainer {\n  //存储所有的中间件\n  private readonly middlewares: Middleware[];\n  //存储第一个中间件\n  private readonly firstMiddleware: Middleware;\n\n  constructor() {\n    //初始化内建的中间件\n    this.middlewares = [\n      respond,\n      cors,\n      stub,\n      parse,\n      queryString,\n      jsonBody,\n      urlEncoded,\n      multipart,\n      authenticate,\n      paramValidate,\n      invoke\n    ];\n    debug(`加载了${this.middlewares.length}个中间件 => [${this.middlewares.map(it => it.name || '匿名').join(',')}]`);\n    this.firstMiddleware = this.middlewares[0];\n  }\n\n  async do(ctx: Context) {\n    debug(`管道处理开始: ${ctx.req.url.split('?')[0]}`);\n    const start = new Date();\n    let currentMiddlewareIndex = 0;\n\n    const next = async (newCtx?: Context, newNext?: Middleware) => {\n      const nextMiddleware = this.middlewares[currentMiddlewareIndex++];\n      if (typeof nextMiddleware === 'function') {\n        debug(`进入${nextMiddleware.name || '匿名'}中间件`);\n        await nextMiddleware.call(null, newCtx || ctx, newNext || next);\n        debug(`离开${nextMiddleware.name || '匿名'}中间件`);\n      }\n    };\n\n    await next(ctx);\n    debug(`管道处理完毕: ${ctx.req.url.split('?')[0]}, 耗时 ${new Date().getTime() - start.getTime()}ms`);\n  }\n\n  use(middleware: Middleware, locateMiddleware?: Middleware) {\n    debug(`添加${middleware.name}中间件在${locateMiddleware ? locateMiddleware.name : '预制'}中间件之前`);\n    let index = this.middlewares.findIndex(it => it === (locateMiddleware || this.firstMiddleware));\n    if (index < 0)\n      index = 0;\n    this.middlewares.splice(index, 0, middleware);\n  }\n\n  useAfter(middleware: Middleware, locateMiddleware: Middleware) {\n    debug(`添加${middleware.name}中间件在${locateMiddleware ? locateMiddleware.name : '所有'}中间件之后`);\n    let index = this.middlewares.findIndex(it => it === locateMiddleware);\n    if (index < 0)\n      index = this.middlewares.length;\n    this.middlewares.splice(index + 1, 0, middleware);\n  }\n}\n","module.exports = require(\"get-parameter-names\");","import * as mergeOptions from 'merge-options';\nimport * as prettyJson from 'prettyjson';\n\nconst debug = require('debug')('kato:options');\n\ntype KatoCorsMethodOptions = (\"GET\" | \"HEAD\" | \"PUT\" | \"PATCH\" | \"POST\" | \"DELETE\")[]\n\nexport type KatoCorsOptions = {\n  origin?: string,\n  methods?: KatoCorsMethodOptions,\n  headers?: string[],\n  optionsStatusCode?: number\n}\n\nexport type KatoOptions = {\n  //是否为开发者模式\n  dev?: boolean,\n  //是否输出运行时错误\n  outputRuntimeError?: boolean,\n  //是否为宽松模式,区别在于对string的反序列化上面\n  loose?: boolean,\n  //文件上传配置\n  files?: {\n    //存储,模式为内存,详见multer模块\n    storage?: any\n    //最大文件大小\n    maxSize?: number\n    //一次最多允许多少个文件上传\n    maxCount?: number\n  },\n  cors?: boolean | KatoCorsOptions\n}\n\n//默认配置\nconst defaultOptions: KatoOptions = {\n  dev: false,\n  loose: false,\n  outputRuntimeError: true,\n  files: {\n    storage: null,\n    maxCount: 5,\n    maxSize: 50000000\n  },\n  cors: {\n    origin: '*',\n    methods: [\"GET\", \"HEAD\", \"PUT\", \"PATCH\", \"POST\", \"DELETE\"],\n    // some legacy browsers (IE11, various SmartTVs) choke on 204\n    optionsStatusCode: 204\n  }\n};\n\nexport function getOptions(options: KatoOptions): KatoOptions {\n  const result = mergeOptions(defaultOptions, options);\n\n  //针对cors options的特殊处理\n  if (options.cors === true)\n    throw new Error(\"kato:cors选项只能为false或者{}(KatoCorsOptions)\");\n  else if (options.cors === false)\n    result.cors = false;\n  else\n    result.cors = mergeOptions(defaultOptions.cors, options.cors);\n\n  debug(`Kato Options:\\n${prettyJson.render(result, {noColor: true})}\\n`);\n  return result;\n}\n","module.exports = require(\"merge-options\");","module.exports = require(\"prettyjson\");","import {Stream} from \"stream\";\nimport {KatoResponse} from \"./response\";\n\n\n/**\n * 把KatoResponse转换成为node标准的res,并写入http流中\n * @param res\n */\nexport function transformer(res: KatoResponse) {\n  //如果不可写,res已经被end了\n  if (!res.writable) return;\n\n  const body = res.body;\n\n  //如果是一个字符串\n  if (Buffer.isBuffer(body)) return res.end(body);\n  //如果是buffer\n  if (typeof body === 'string') return res.end(body);\n  //如果是一个stream\n  if (body instanceof Stream) return body.pipe(res);\n  //否则,关闭res\n  return res.end();\n}\n\n","import {Request, Response} from \"express\";\n\nimport Kato from \"../core/kato\";\n\n//express框架适配器\nexport function adapter(kato: Kato) {\n  return async function (req: Request, res: Response) {\n    await kato.do(req, res)\n  }\n}\n"],"sourceRoot":""}